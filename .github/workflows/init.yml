name: init banner

on:
  workflow_dispatch:
  schedule:
    # You can change this CRON syntax to customize execute interval
    - cron: "0 */2 * * *"


permissions:
  contents: write
  actions: write

jobs:
  init:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}             # GitHub Token for CLI
      FB_TOKEN: ${{ secrets.FB_TOKEN }}                 # Facebook Token

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: "3.13"
      
      # Check if FB_TOKEN is valid
      - name: Check if FB_TOKEN is valid
        run: |
          if [ -z "$FB_TOKEN" ]; then
            echo "> ❌ **FB_TOKEN is not defined in GitHub Secrets**" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
      
          response=$(curl -X GET -s https://graph.facebook.com/v21.0/me?fields=id,name\&access_token=$FB_TOKEN)
          if [ $? -ne 0 ] || [ -z "$response" ]; then
            echo "> ❌ **Invalid or expired Facebook token**" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      # checa se o workflow já está rodando, atribui o valor para a variável IS_RUNNING
      - name: Is it already running?
        run: |
          WORKFLOW_NAME="${{ github.workflow }}"
          RUN_COUNT=$(gh run list --status=in_progress --json name |
            jq "[.[] | select(.name == \"$WORKFLOW_NAME\")] | length")
        
          if [ "$RUN_COUNT" -gt 1 ]; then
            echo "The workflow init banner is already running"
            echo "IS_RUNNING=true" >> $GITHUB_ENV
          else
            echo "IS_RUNNING=false" >> $GITHUB_ENV
          fi
        
      # cache de dependencias
      - name: Cache dependencies
        uses: actions/cache@v4.2.0
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      # instala dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install -r requirements.txt

      # So roda o main.py se o workflow não estiver rodando
      - name: Main
        run: |
          if [[ "$IS_RUNNING" != "true" ]]; then 
            python main.py
          fi
        
      - name: "commit changes"
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "save changes"
          branch: main
          file_pattern: "subtitles/* logs/*"
          push_options: '--force'
          
